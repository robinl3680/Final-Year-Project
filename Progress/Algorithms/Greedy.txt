1. Define Vertex structure that contains.
	1.1 Vertex number
	1.2	Vertex data
	1.3 Adjacency list
	1.4 Local indexing list
2. Intialize MPI environment.
3. For each core do the following.
	3.1 Read the adjacency list
	3.2 Read the partition file
	3.3 Create subgraph on each core
	3.4 Create ghost list on each core
4. Create a local index for vertices on each core.
5. Create and broadcast synchornization message from each core 'i' that contains,
	5.1 Size of the ghost from the core 'i' to all other cores.
6. For each core 'i' do the following
	6.1 Receive the synchornization message from all other cores.
	6.2 Construct a matrix 'synch' in which synch[i][j] contains size of the ghost to send from i'th core to j'th core.
7. Prepare the cores for communication as follows.
	7.1 Take the current largest entry in the 'synch' matrix and assign curresponding 'i' and 'j' to slot 0.
	7.2 Avoid the previously taken 'i' and 'j', now find next largest entry assign the curresponding 'j' and 'j' to slot 0.
	7.3 Continuing in ths way fill out slot 0 and then proceed to slot 1 and so on.
8.Intiate the communication.
	8.1 Pack the ghost vertices for the cores in slot 0 and intiate their communication.
	8.2 After completing all communication in slot 0 intiate the slot 1 and so on.
7. Do the required calculations on the cores.
8. Finalize the MPI environment.